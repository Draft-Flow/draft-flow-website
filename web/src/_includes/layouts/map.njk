{% extends  'layouts/base/index.njk' %}

{%- set pageContent = pages | getPage(pageID) -%}
{%- set bannerImageLg -%}
  {%- imageUrlFor pageContent.banner.asset._ref, 2000 -%}
{%- endset -%}

{% set bannerTitle = pageContent.title %}

{% block banner %}
  {% if bannerImageLg %}
    {% include "./includes/bannerSmall.njk" %}
  {% endif %}
{% endblock %}

{% block content %}
  <section class="flex justify-center px-2 lg:px-4">
    <div class="max-w-7xl w-full py-20">
      <div class="w-full p-2 lg:p-4 bg-pg-tan-lightest rounded">
        <div id='map' class="aspect-square md:aspect-video w-full"></div>
      </div>
    </div>
  </section>
    {% jsbundle 'route', true | safe %}
      <script>
        import mapboxgl from 'mapbox-gl'
        import 'mapbox-gl/dist/mapbox-gl.css'

        mapboxgl.accessToken = '{{ env.mapbox_token }}';
        const map = new mapboxgl.Map({
            container: 'map',
            style: '{{ env.mapbox_style }}',
            center: {lat: 56.6405969, lon: -3.7639374 },
            zoom: 9,
            cooperativeGestures: true,
        });
        map.scrollZoom.disable();
        // Add zoom and rotation controls to the map.
        map.addControl(new mapboxgl.NavigationControl());

        let hoveredStateId = null;

        map.on('load', () => {
           map.addSource('routes', {
            type: 'geojson',
            data: '{{ env.url }}/routesGeoJSON.json',
            generateId: true
          })

          map.addLayer({
            'id': 'routes-layer',
            'type': 'line',
            'source': 'routes',
            'layout': {
              'line-join': 'round',
              'line-cap': 'round'
            },
            'paint': {
              'line-width': 4,
              'line-color': [
                'case',
                ['boolean', ['feature-state', 'hover'], false],
                '#b45309', '#404040'
              ]
            }
          })

          map.on('click', 'routes-layer', (e) => {
            new mapboxgl.Popup()
            .setLngLat(e.lngLat)
            .setHTML(`
              <a class="popup-title" href="/routes/${e.features[0].properties.path}">${ e.features[0].properties.name}</a>
              <div>${e.features[0].properties.rating} â€¢ ${e.features[0].properties.distance.toFixed(2)} km</div>
            `)
            .addTo(map)
          });

          // Change the cursor to a pointer when
          // the mouse is over the states layer.
          map.on('mouseenter', 'routes-layer', (e) => {
            map.getCanvas().style.cursor = 'pointer';
            if (e.features.length > 0) {
              if (hoveredStateId !== null) {
                map.setFeatureState({
                  source: 'states', id: hoveredStateId
                }, { hover: false });
              }
            }
            hoveredStateId = e.features[0].id
            map.setFeatureState({ 
              source: 'routes', id: hoveredStateId 
            }, { hover: true });
 
          });
          
          // Change the cursor back to a pointer
          // when it leaves the states layer.
          map.on('mouseleave', 'routes-layer', (e) => {
            map.getCanvas().style.cursor = '';
            if (hoveredStateId !== null) {
              map.setFeatureState({
                source: 'routes', id: hoveredStateId
                }, { hover: false });
            }
      
            hoveredStateId = null;
          });
        })
    </script>
    {% endjsbundle %}
{% endblock %}
