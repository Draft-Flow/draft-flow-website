<div id="sentinel" class="absolute"></div>
<header id="header" class="fixed z-50 top-0 w-full lg:absolute text-pg-tan-light flex justify-center lg:transition-all lg:duration-150 lg:ease-linear">
  <div id="navbar" class="w-full mx-4 max-w-6xl  text-center lg:text-left flex flex-col lg:flex-row lg:justify-between lg:items-center">
    <div id="logobar" class="h-24 flex justify-between items-center transition-all duration-150 ease-linear">
      <h1 class="home h-full flex items-center {% if page.url == '/' %} nav-item-active{% endif %}">
        <a id="logo" href="{{ '/' | url }}" class="block w-40 grayscale contrast-200 brightness-200 transition-all duration-150 ease-linear">
          {% set logoSrc %}
            {% imageUrlFor metadata.logo.asset._ref, 600 %}
          {% endset %}
          {% image logoSrc, metadata.logo.alt, "(min-width: 30em) 50vw, 100vw", null, 'eager'  %}
        </a>
      </h1>
      <button class="inline lg:hidden" id="navToggle" aria-haspopup="true" aria-controls="nav">
        <div id="navOpen">{% svgIcon 'src/assets/icons/navToggle.svg' %}</div>
        <div id="navClose" class="hidden">{% svgIcon 'src/assets/icons/navClose.svg' %}</div>
      </button>
    </div>
    <nav class="hidden lg:h-full lg:block" id="nav">
      <ul class="nav lg:h-full pt-6 mt-6 lg:pt-0 lg:mt-0 grid grid-cols-1 grid-flow-row lg:grid-row-1 lg:grid-flow-col gap-y-12 lg:gap-x-20 font-bold lg:font-medium text-3xl lg:text-lg border-t-2 border-dashed lg:border-0">
        {%- for nav in collections.nav | reverse -%}
        <li class="lg:flex lg:items-center px-2 nav-item{% if nav.url == page.url %} nav-item-active{% endif %}">
          <a href="{{ nav.url | url }}">{{ nav.data.navtitle }}</a>
        </li>
        {%- endfor -%}
      </ul>
    </nav>
  </div>
</header>
<script>
  const headerEl = document.getElementById('header')

  /* Menu Toggle - START */
  const bodyEl = document.body
  const navEl = document.getElementById('nav')
  const toggleEl = document.getElementById('navToggle')
  const navOpenEl = document.getElementById('navOpen')
  const navCloseEl = document.getElementById('navClose')

  const toggleNav = () => {
    bodyEl.classList.toggle('navOpen')
    headerEl.classList.toggle('open')
    navEl.classList.toggle('hidden')
    navOpenEl.classList.toggle('hidden')
    navCloseEl.classList.toggle('hidden')
  }

  // Toggle menu on toggle click
  toggleEl.addEventListener('click', () => {
    toggleNav()
  })

  // Close menu on Escape, if open
  document.addEventListener('keydown', event => {
    if (event.key === 'Escape') {
      if (bodyEl.classList.contains('navOpen')) {
        toggleNav()
      }
    }
  })
  /* Menu Toggle - END */

  /* Fixed Nav - START */
  const sentinelEl = document.getElementById('sentinel')
  const stuckClass = 'stuck'

  const handler = (entries) => {
    if (headerEl) {
      if (!entries[0].isIntersecting) {
        headerEl.classList.add(stuckClass)
      } else {
        headerEl.classList.remove(stuckClass)
      }
    }
  }

  const observer = new window.IntersectionObserver(handler)
  observer.observe(sentinelEl)
  /* Fixed Nav - END */

</script>
